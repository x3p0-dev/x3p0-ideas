// WordPress webpack config.
const defaultConfig = require( '@wordpress/scripts/config/webpack.config' );
const { getWebpackEntryPoints } = require( '@wordpress/scripts/utils/config' );

// Plugins.
const RemoveEmptyScriptsPlugin = require( 'webpack-remove-empty-scripts' );
const CopyPlugin               = require( 'copy-webpack-plugin' );

// Utilities.
const path         = require( 'path' );
const { globSync } = require( 'glob' );

// Gets all of the block stylesheets, which are enqueued separately and inlined
// into the `<head>` area by WordPress. These should not be bundled together.
const blockStylesheets = () => globSync( './resources/scss/blocks/core/*.scss' ).reduce(
	( files, filepath ) => {
		const name = path.parse( filepath ).name;

		files[ `css/blocks/core/${ name }` ] = path.resolve(
			process.cwd(),
			'resources/scss/blocks/core',
			`${ name }.scss`
		);

		return files;
	}, {}
);

// Add any a new entry point by extending the webpack config.
module.exports = {
	...defaultConfig,
	...{
		entry: {
			...getWebpackEntryPoints(),
			...blockStylesheets(),
			'js/editor':  path.resolve( process.cwd(), 'resources/js',   'editor.js'   ),
			'css/screen': path.resolve( process.cwd(), 'resources/scss', 'screen.scss' ),
			'css/editor': path.resolve( process.cwd(), 'resources/scss', 'editor.scss' )
		},
		plugins: [
			// Very important! Include WP's plugin config or the
			// world will cease to exist as we know it.
			...defaultConfig.plugins,

			// Removes the empty `.js` files generated by webpack but
			// sets it after WP has generated its `*.asset.php` file.
			new RemoveEmptyScriptsPlugin( {
				stage: RemoveEmptyScriptsPlugin.STAGE_AFTER_PROCESS_PLUGINS
			} ),

			// Copies any assets that don't need to be processed to
			// the output folder.
			new CopyPlugin( {
				patterns: [
					{
						from: './resources/fonts',
						to:   './fonts'
					},
					{
						from: './resources/media',
						to:   './media'
					},
					{
						from: './resources/partials',
						to:   './partials'
					}
				]
			} )
		]
	}
};

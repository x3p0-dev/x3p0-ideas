////
/// Image block CSS.
///
/// @author Justin Tadlock <justintadlock@gmail.com>
/// @link   https://github.com/x3p0-dev/x3p0-ideas
////

@use '../../tools/icon.scss';
@use '../../tools/inline-icon';

// -----------------------------------------------------------------------------
// Block fixes.
// -----------------------------------------------------------------------------

///
/// Make sure the image block has border box sizing.
///
.wp-block-image {
	box-sizing: border-box;
}

///
/// The WordPress lightbox for CSS to hide captions isn't always specific enough
/// to overrule custom block styles, so we're giving it a higher specificity.
///
.wp-lightbox-overlay .wp-block-image figcaption.wp-element-caption {
	display: none;
}

// -----------------------------------------------------------------------------
// Block customizations.
// -----------------------------------------------------------------------------

///
/// Don't add borders or shadow to SVG images or their wrapping link elements
/// by default.
///
.wp-block-image img[src$=".svg"],
.wp-block-image a:has(img[src$=".svg"]),
.editor-styles-wrapper .wp-block-image img[src$=".svg"],
.editor-styles-wrapper .wp-block-image a:has(img[src$=".svg"]) {
	border: none;
	box-shadow: none;
}

///
/// Need to add the default border-radius to the link itself, which may have an
/// outline style. However, it can't inherit the image's radius, so it needs to
/// use the set default.
///
.wp-block-image a:has(img) {
	border-radius: var(--wp--custom--border--primary--radius);
}

///
/// Match hover background with that defined by `a img:hover`.
///
.wp-lightbox-container img {
	transition: box-shadow 0.5s ease-in-out;

	&:hover {
		box-shadow: var(--wp--custom--shadow--primary--hover);
	}
}

///
/// Lightbox trigger button positioning to match the theme's spacing.
///
.wp-lightbox-container .lightbox-trigger {
	top: var(--wp--preset--spacing--20) !important;
	right: var(--wp--preset--spacing--20) !important;
}

///
/// Gradient background styles for the custom editor feature. Essentially, this
/// style creates a faux border by placing a background on the block and giving
/// it padding.
///
figure.wp-block-image[class*=-gradient-background] {
	--image-padding: clamp(0.5rem, -0.33333333333333326rem + 2.083333333333333cqi, 1rem);

	// Setting the size to zero because, in most cases, we're inheriting the
	// background gradient on the image and hiding this. In cases where we
	// want to use the gradient on the wrapping `<figure>` tag, just reset
	// this to `auto`.
	background-size: 0 0 !important;

	// Remove any theme/variation padding from the wrapper.
	padding: 0;

	// Note that the editor has an extra wrapper `<div>` around the image,
	// so we must inherit here so that we can inherit on the `<img>` tag.
	// The image can also have a link wrapper, so it must also inherit for
	// both the front end and editor.
	> div,
	> a,
	> div > a {
		background: inherit;
	}

	// Inherits the background image from the parent `<figure>` tag and
	// applies it to the image itself. This allows the `<figcaption>` to sit
	// outside of the "frame" for most block styles.
	img {
		background-color: inherit;
		background-image: inherit;
		border: none;
		padding: var(--image-padding);
	}

	// Repositions the lightbox trigger button to account for the additional
	// padding on the image.
	.lightbox-trigger {
		top: calc(var(--image-padding) + var(--wp--preset--spacing--20)) !important;
		right: calc(var(--image-padding) + var(--wp--preset--spacing--20)) !important;
	}
}

// -----------------------------------------------------------------------------
// Block style variations.
// -----------------------------------------------------------------------------

///
/// The borderless style removes any potential borders around the images, even
/// styles that are similar to a border, such as outlines and shadows. We also
/// remove any padding so that backgrounds on the block or image don't appear.
/// This style targets both the outer block and the nested image to clear away
/// those styles.
///
.wp-block-image.is-style-borderless,
.wp-block-image.is-style-borderless img {
	padding: 0 !important;
	background: none !important;
	border: none !important;
	box-shadow: none !important;
	outline: none !important;
}

///
/// Adds a hand-drawn style with a custom border.
///
/// @todo In the past, there were also caption-left and caption-right variations
/// upon this style. However, these did not work well when nested in a Gallery
/// block. In the future, revisit this idea and see if we can unregister
/// specific styles based on context.
///
.wp-block-image.is-style-hand-drawn {

	// Remove any theme/variation padding from the wrapper.
	padding: 0;
	background: none;

	// The hand-drawn effect is given to the image itself.
	img {
		color: inherit;
		border: 2px solid currentColor;
		overflow: hidden;
		box-shadow: var(--wp--custom--shadow--primary--default);

		// No `theme.json` support for this style of radius.
		border-radius: 255px 15px 225px 15px/15px 225px 15px 255px !important;
	}

	// If the block also has a gradient background, limit the padding so
	// that the hand-drawn border still looks decent.
	&[class*=gradient-] img {
		padding: 2px;
	}

	// Customize the caption display for this style.
	// Note: we need to target `.wp-element-caption` to overwrite caption
	// styles defined in `theme.json`.
	.wp-element-caption {
		display: flex;
		gap: 0.5rem;
		justify-content: center;
		align-items: baseline;
		transform: rotate(0.5deg);
	}

	// Adds a curved arrow icon pointing up to the image above.
	figcaption::before {
		content: "\2938 ";
		transform: rotate(135deg);
		padding-top: 0.5rem;
	}
}

///
/// An icon style that prefixes the caption with a camera icon. ðŸ“·
///
.wp-block-image.is-style-icon .wp-element-caption {
	@include inline-icon.prefix(icon.get-url('photo-camera'));

	& {
		justify-content: center;
		gap: 0.5rem;
	}
}

///
/// Old-school Polaroid picture style that frames the image with a fading border.
///
/// Note: it was necessary to target `figure` here to overrule other styles at
/// the top level of the block. I forgot exactly which styles this was needed
/// for as I write this inline comment (note to self: keep better inline docs as
/// I work).
///
figure.wp-block-image.is-style-polaroid {
	padding:          var(--wp--preset--spacing--40);
	background-color: var(--wp--custom--color--background--level-0);
	transition: all 0.5s ease-in-out;
	overflow: visible;
	background-size: auto !important;
}

.wp-block-image.is-style-polaroid {

	// Adds an inset shadow to create the faded photo design but only when
	// there is no gradient background for the image. For those cases, the
	// gradient wins out.
	&:where(:not([class*=gradient-])) {
		box-shadow: var(--wp--custom--shadow--primary--default), 0 0 8rem rgb(255, 255, 235) inset;
	}

	// Updates the spacing of the caption, which is different from other
	// Image blocks. In this case, the caption itself sits within the photo
	// frame area.
	.wp-element-caption {
		margin-top: var(--wp--preset--spacing--40);
		color: var(--wp--custom--color--foreground--primary);
	}

	// Adjustments when the Image block also has a gradient background.
	&[class*=-gradient-background] {

		// Remove the image padding so that the background appears for
		// the photo frame and not the inner image.
		img { padding: 0; }

		// A general-purpose solution to make the text stand out against
		// various gradient backgrounds. This makes the text white but
		// gives it a glowing dark text shadow, essentially creating a
		// sort of text border that fades out.
		.wp-element-caption {
			color: var(--wp--preset--color--white);
			text-shadow: 1px 1px 1px #000, 0 0 8px rgba(0, 0, 0, 0.7);
		}
	}
}

///
/// The tape block style adds a single piece of tape that overlays the top-center
/// of the image.
///
.wp-block-image.is-style-tape {
	overflow: visible;
	position: relative;

	// Adds tape before/after the block. These are defaults that need to be
	// adjusted for each variation on this style.
	&::before {
		content: "";
		display: block;
		position: absolute;
		background: rgba(255, 255, 235, 0.5);
		box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.3), 0 0 4rem rgba(255, 255, 235, 0.5) inset;
		height: var(--wp--preset--spacing--70);
		width: 7rem;
		z-index: 1;

		left: 50%;
		margin: auto auto auto -3.5rem;
		top: calc(-1 * var(--wp--preset--spacing--20));
		transform: rotate(8deg);
	}

	// Adjust the positioning when the image has a gradient background. We
	// must account for the additional padding.
	&[class*=gradient-]::before {
		top: calc(
			-0.75 *
			clamp(0.5rem, -0.33333333333333326rem + 2.083333333333333cqi, 1rem)
		);
	}
}

// Removes the tape effect when the image is inside of the lightbox overlay.
.wp-lightbox-overlay.active .wp-block-image.is-style-tape {
	&::before,
	&::after {
		display: none;
	}
}

// -----------------------------------------------------------------------------
// Block overrides.
// -----------------------------------------------------------------------------

///
/// Editor fix. The tape styles use the `::after` pseudo-element as part
/// of their design. But WP also uses this in the editor to show the selected
/// block outline. So, we're attaching an outline to the image itself in this case.
///
/// @todo Test to see if this is still needed.
///
.wp-block-image.is-style-tape.block-editor-block-list__block:focus img {
	outline: 2px solid var(--wp-admin-theme-color, transparent);
}

///
/// Removes the resizable box handle for polaroid style.
///
/// @todo Test to see if this is still needed.
///
.wp-block-image:where([class*=is-style-polaroid]) .components-resizable-box__handle {
	display: none;
}

///
/// Necessary adjustments for images within a lightbox. Just making sure the
/// theme's custom styles don't cause too much craziness.
///
.wp-lightbox-overlay .wp-block-image.enlarged-image {
	padding: 0 !important;
	border: none !important;
}

.wp-lightbox-overlay .wp-block-image img {
	padding: 0 !important;
	border: none !important;
	border-radius: var(--wp--custom--border--primary--radius) !important;
	box-shadow: var(--wp--custom--shadow--primary--default) !important;
}
